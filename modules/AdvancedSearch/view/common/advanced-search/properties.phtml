<?php
/**
 * @var \Laminas\View\Renderer\PhpRenderer $this
 * @var array $query
<<<<<<< HEAD
 *
 *
 * Same as core template, with:
 * - use option to restrict to used terms in admin;
 * - more querier options;
 * - use chosen-select;
 * - short echo.
 */

$plugins = $this->getHelperPluginManager();
$status = $plugins->get('status');
$setting = $plugins->get('setting');
$escape = $plugins->get('escapeHtml');
$translate = $plugins->get('translate');
$siteSetting = $plugins->get('siteSetting');
$propertySelect = $plugins->get('propertySelect');

$isSiteRequest = $status->isSiteRequest();
=======
 */

$plugins = $this->getHelperPluginManager();
$translate = $plugins->get('translate');
$escape = $plugins->get('escapeHtml');
$propertySelect = $plugins->get('propertySelect');
$setting = $plugins->get('setting');
$siteSetting = $plugins->get('siteSetting');

$isSiteRequest = $this->status()->isSiteRequest();
>>>>>>> c6f1c16375a005bfd976d7028b85168df30fcd28
$applyTemplates = $isSiteRequest ? $siteSetting('advancedsearch_apply_templates') : false;
$usedTerms = $isSiteRequest ? $siteSetting('advancedsearch_restrict_used_terms', true) : $setting('advancedsearch_restrict_used_terms', true);

// Prepare the property queries.
$properties = $query['property'] ?? [];
$properties = array_filter($properties, function ($value) {
    return isset($value['text']) ? '' !== trim($value['text']) : true;
});
if (!$properties) {
    $properties[] = [];
}

if (isset($query['search'])) {
    unset($properties[0]['joiner']);
    array_unshift($properties, [
        'property' => '',
        'type' => 'in',
        'text' => $query['search'],
    ]);
}

$queryOption = function ($value, array $search, $key, $text) {
    $selected = null;
    if (isset($search[$key]) && $value === $search[$key]) {
        $selected = ' selected';
    }
    return sprintf('<option value="%s"%s>%s</option>', $value, $selected, $text);
};
<<<<<<< HEAD
$queryText = function (array $search, $index) use ($escape, $translate) {
    $text = $search['text'] ?? null;
    return sprintf('<input type="text" class="query-text" name="%s" value="%s" aria-label="%s">',
        $escape("property[$index][text]"),
=======
$queryText = function (array $search, $engine) use ($escape, $translate) {
    $text = $search['text'] ?? null;
    return sprintf('<input type="text" class="query-text" name="%s" value="%s" aria-label="%s">',
        $escape("property[$engine][text]"),
>>>>>>> c6f1c16375a005bfd976d7028b85168df30fcd28
        $escape($text),
        $escape($translate('Query text')));
};
?>

<div id="property-queries" class="field removable multi-value" role="group" aria-labelledby="by-value-label">
    <div class="field-meta">
<<<<<<< HEAD
        <span id="by-value-label" class="label"><?= $translate('Search by value') ?></span>
        <button type="button" class="add-value o-icon-add button" aria-label="<?= $translate('Add new value') ?>" title="<?= $translate('Add new value') ?>"></button>
    </div>
    <div class="inputs">
        <?php
        $index = 0;
        foreach ($properties as $property):
            $stem = "property[$index]";
            $propertyList = isset($property['property'])
                ? (is_array($property['property']) ? $property['property'] : [$property['property']])
                : [null];
        ?>
        <div class="value">
            <select class="joiner chosen-select" name="<?= $escape($stem . '[joiner]') ?>">
                <?= $queryOption('and', $property, 'joiner', $translate('AND')) ?>
                <?= $queryOption('or', $property, 'joiner', $translate('OR')) ?>
            </select>
            <?= $propertySelect([
                'name' => $stem . '[property]',
=======
        <span id="by-value-label" class="label"><?php echo $translate('Search by value'); ?></span>
        <button type="button" class="add-value o-icon-add button" aria-label="<?php echo $translate('Add new value'); ?>" title="<?php echo $translate('Add new value'); ?>"></button>
    </div>
    <div class="inputs">
        <?php
        $engine = 0;
        foreach ($properties as $property):
            $stem = "property[$engine]";
        ?>
        <div class="value">
            <select class="joiner chosen-select" name="<?php echo $escape($stem . '[joiner]'); ?>">
                <?php echo $queryOption('and', $property, 'joiner', $translate('AND')); ?>
                <?php echo $queryOption('or', $property, 'joiner', $translate('OR')); ?>
            </select>
            <?php echo $propertySelect([
                'name' => $stem . '[property]',
                'attributes' => [
                    'class' => 'query-property chosen-select',
                    'value' => $property['property'] ?? null,
                    'aria-label' => $translate('Property'),
                ],
>>>>>>> c6f1c16375a005bfd976d7028b85168df30fcd28
                'options' => [
                    'empty_option' => '[Any Property]', // @translate
                    'apply_templates' => $applyTemplates,
                    'used_terms' => $usedTerms,
                ],
<<<<<<< HEAD
                'attributes' => [
                    'class' => 'query-property chosen-select',
                    'value' => $propertyList,
                    'aria-label' => $translate('Property'),
                    'multiple' => true,
                    'data-placeholder' => $translate('Select propertiesâ€¦'),
                ],
            ]) ?>
            <select class="query-type chosen-select" name="<?= $escape($stem . '[type]') ?>" aria-label="<?= $translate('Query type') ?>">
                <?= $queryOption('eq', $property, 'type', $translate('is exactly')) ?>
                <?= $queryOption('neq', $property, 'type', $translate('is not exactly')) ?>
                <?= $queryOption('in', $property, 'type', $translate('contains')) ?>
                <?= $queryOption('nin', $property, 'type', $translate('does not contain')) ?>
                <?= $queryOption('sw', $property, 'type', $translate('starts with')) ?>
                <?= $queryOption('nsw', $property, 'type', $translate('does not start with')) ?>
                <?= $queryOption('ew', $property, 'type', $translate('ends with')) ?>
                <?= $queryOption('new', $property, 'type', $translate('does not end with')) ?>
                <?= $queryOption('res', $property, 'type', $translate('is resource with ID')) ?>
                <?= $queryOption('nres', $property, 'type', $translate('is not resource with ID')) ?>
                <?= $queryOption('ex', $property, 'type', $translate('has any value')) ?>
                <?= $queryOption('nex', $property, 'type', $translate('has no values')) ?>
                <?= $queryOption('exs', $property, 'type', $translate('has a single value')) ?>
                <?= $queryOption('nexs', $property, 'type', $translate('has not a single value')) ?>
                <?= $queryOption('exm', $property, 'type', $translate('has multiple values')) ?>
                <?= $queryOption('nexm', $property, 'type', $translate('has not multiple values')) ?>
                <?= $queryOption('lex', $property, 'type', $translate('is a linked resource')) ?>
                <?= $queryOption('nlex', $property, 'type', $translate('is not a linked resource')) ?>
                <?= $queryOption('lres', $property, 'type', $translate('is linked with resource with ID')) ?>
                <?= $queryOption('nlres', $property, 'type', $translate('is not linked with resource with ID')) ?>
                <?php /* // TODO Require a js to force value to be "literal", "resource" or "uri". ?>
                <?= $queryOption('tp', $property, 'type', $translate('has main type')) ?>
                <?= $queryOption('ntp', $property, 'type', $translate('has not main type')) ?>
                <?php */ ?>
                <?= $queryOption('tpl', $property, 'type', $translate('has type literal-like')) ?>
                <?= $queryOption('ntpl', $property, 'type', $translate('has not type literal-like')) ?>
                <?= $queryOption('tpr', $property, 'type', $translate('has type resource-like')) ?>
                <?= $queryOption('ntpr', $property, 'type', $translate('has not type resource-like')) ?>
                <?= $queryOption('tplu', $property, 'type', $translate('has type uri-like')) ?>
                <?= $queryOption('ntpu', $property, 'type', $translate('has not type uri-like')) ?>
                <?= $queryOption('dtp', $property, 'type', $translate('has data type')) ?>
                <?= $queryOption('ndtp', $property, 'type', $translate('has not data type')) ?>
            </select>
            <?= $queryText($property, $index) ?>
            <button type="button" class="o-icon-delete remove-value button" aria-label="<?= $translate('Remove value') ?>" title="<?= $translate('Remove value') ?>"></button>
        </div>
        <?php
            ++$index;
=======
            ]); ?>
            <select class="query-type chosen-select" name="<?php echo $escape($stem . '[type]'); ?>" aria-label="<?php echo $translate('Query type'); ?>">
                <?php echo $queryOption('eq', $property, 'type', $translate('is exactly')); ?>
                <?php echo $queryOption('neq', $property, 'type', $translate('is not exactly')); ?>
                <?php echo $queryOption('in', $property, 'type', $translate('contains')); ?>
                <?php echo $queryOption('nin', $property, 'type', $translate('does not contain')); ?>
                <?php echo $queryOption('sw', $property, 'type', $translate('starts with')); ?>
                <?php echo $queryOption('nsw', $property, 'type', $translate('does not start with')); ?>
                <?php echo $queryOption('ew', $property, 'type', $translate('ends with')); ?>
                <?php echo $queryOption('new', $property, 'type', $translate('does not end with')); ?>
                <?php echo $queryOption('res', $property, 'type', $translate('is resource with ID')); ?>
                <?php echo $queryOption('nres', $property, 'type', $translate('is not resource with ID')); ?>
                <?php echo $queryOption('ex', $property, 'type', $translate('has any value')); ?>
                <?php echo $queryOption('nex', $property, 'type', $translate('has no values')); ?>
                <?php echo $queryOption('lex', $property, 'type', $translate('is a linked resource')); ?>
                <?php echo $queryOption('nlex', $property, 'type', $translate('is not a linked resource')); ?>
                <?php echo $queryOption('lres', $property, 'type', $translate('is linked with resource with ID')); ?>
                <?php echo $queryOption('nlres', $property, 'type', $translate('is not linked with resource with ID')); ?>
            </select>
            <?php echo $queryText($property, $engine); ?>
            <button type="button" class="o-icon-delete remove-value button" aria-label="<?php echo $translate('Remove value'); ?>" title="<?php echo $translate('Remove value'); ?>"></button>
        </div>
        <?php
            $engine++;
>>>>>>> c6f1c16375a005bfd976d7028b85168df30fcd28
        endforeach;
        ?>
    </div>
</div>
